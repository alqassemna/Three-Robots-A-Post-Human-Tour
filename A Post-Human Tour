<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Three Robots: A Post-Human Tour</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Consolas', 'Monaco', monospace;
            background: linear-gradient(135deg, #2c1810 0%, #1a1a1a 50%, #0d0d0d 100%);
            color: #e0e0e0;
            overflow: hidden;
            height: 100vh;
        }

        .game-container {
            width: 100%;
            height: 100vh;
            position: relative;
            overflow: hidden;
        }

        .title-screen {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, #1a1a1a, #2c1810);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            transition: opacity 1s ease;
        }

        .title {
            font-size: 3rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 2rem;
            background: linear-gradient(45deg, #ff6b35, #f7931e, #ffd700);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 0 30px rgba(255, 107, 53, 0.5);
        }

        .subtitle {
            font-size: 1.2rem;
            margin-bottom: 3rem;
            text-align: center;
            opacity: 0.8;
        }

        .start-btn {
            padding: 1rem 2rem;
            font-size: 1.2rem;
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            border: none;
            border-radius: 10px;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 20px rgba(255, 107, 53, 0.3);
        }

        .start-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 30px rgba(255, 107, 53, 0.5);
        }

        .game-world {
            width: 100%;
            height: 100vh;
            background: linear-gradient(180deg, #87CEEB 0%, #DEB887 40%, #8B4513 100%);
            position: relative;
            perspective: 1000px;
        }

        .environment {
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 70%;
            background: linear-gradient(180deg, transparent 0%, #654321 50%, #4a3728 100%);
        }

        .robot {
            position: absolute;
            bottom: 100px;
            width: 80px;
            height: 120px;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 100;
        }

        .robot.active {
            transform: scale(1.1);
            filter: drop-shadow(0 0 20px #00ff88);
        }

        .robot-kvrc {
            left: 200px;
            background: linear-gradient(45deg, #4a90e2, #357abd);
            border-radius: 15px 15px 5px 5px;
            border: 3px solid #2c5aa0;
        }

        .robot-xbot {
            left: 350px;
            background: linear-gradient(45deg, #e74c3c, #c0392b);
            border-radius: 10px;
            border: 3px solid #a93226;
        }

        .robot-11-45-g {
            left: 500px;
            background: linear-gradient(45deg, #f39c12, #e67e22);
            border-radius: 20px 20px 8px 8px;
            border: 3px solid #d68910;
        }

        .robot::before {
            content: '';
            position: absolute;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            width: 20px;
            height: 20px;
            background: #00ff88;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 0.5; }
            50% { opacity: 1; }
        }

        .artifact {
            position: absolute;
            width: 60px;
            height: 60px;
            cursor: pointer;
            transition: all 0.3s ease;
            border-radius: 8px;
            border: 2px solid transparent;
        }

        .artifact:hover {
            transform: scale(1.2);
            border-color: #ffd700;
            box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
        }

        .artifact.soda-can {
            bottom: 150px;
            left: 100px;
            background: linear-gradient(45deg, #e74c3c, #c0392b);
            border-radius: 50% 50% 20% 20%;
        }

        .artifact.burger {
            bottom: 180px;
            left: 650px;
            background: linear-gradient(45deg, #8b4513, #a0522d);
            border-radius: 50%;
        }

        .artifact.jukebox {
            bottom: 120px;
            left: 800px;
            background: linear-gradient(45deg, #9b59b6, #8e44ad);
            border-radius: 15px 15px 5px 5px;
            width: 80px;
            height: 100px;
        }

        .artifact.computer {
            bottom: 160px;
            left: 950px;
            background: linear-gradient(45deg, #34495e, #2c3e50);
            border-radius: 5px;
        }

        .dialogue-box {
            position: absolute;
            bottom: 20px;
            left: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.9);
            border: 2px solid #ff6b35;
            border-radius: 15px;
            padding: 20px;
            min-height: 120px;
            display: none;
            z-index: 200;
        }

        .dialogue-box.show {
            display: block;
            animation: slideUp 0.5s ease;
        }

        @keyframes slideUp {
            from { transform: translateY(100%); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .robot-name {
            font-weight: bold;
            color: #ff6b35;
            margin-bottom: 10px;
            font-size: 1.1rem;
        }

        .dialogue-text {
            line-height: 1.6;
            font-size: 1rem;
        }

        .ui-panel {
            position: absolute;
            top: 20px;
            left: 20px;
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #ff6b35;
            border-radius: 10px;
            padding: 15px;
            min-width: 200px;
        }

        .robot-selector {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }

        .robot-btn {
            padding: 8px 12px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #ff6b35;
            border-radius: 5px;
            color: #e0e0e0;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .robot-btn.active {
            background: #ff6b35;
            color: #000;
        }

        .discoveries {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #ff6b35;
        }

        .discovery-item {
            background: rgba(255, 107, 53, 0.1);
            margin: 5px 0;
            padding: 8px;
            border-radius: 5px;
            font-size: 0.9rem;
            border-left: 3px solid #ff6b35;
        }

        .cat {
            position: absolute;
            bottom: 80px;
            right: 100px;
            width: 40px;
            height: 30px;
            background: linear-gradient(45deg, #2c2c2c, #1a1a1a);
            border-radius: 50% 50% 20% 20%;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .cat:hover {
            transform: scale(1.2);
        }

        .cat::before {
            content: 'üëÅÔ∏è';
            position: absolute;
            top: 5px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 12px;
        }

        .instructions {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #ff6b35;
            max-width: 300px;
            font-size: 0.9rem;
        }

        .hidden { display: none; }

        @media (max-width: 768px) {
            .title { font-size: 2rem; }
            .robot { width: 60px; height: 90px; }
            .artifact { width: 40px; height: 40px; }
            .ui-panel { position: relative; margin: 10px; }
            .instructions { position: relative; margin: 10px; }
        }
    </style>
</head>
<body>
    <div class="game-container">
        <!-- Title Screen -->
        <div class="title-screen" id="titleScreen">
            <h1 class="title">THREE ROBOTS</h1>
            <p class="subtitle">A Post-Human Tour</p>
            <button class="start-btn" onclick="startGame()">Begin Exploration</button>
        </div>

        <!-- Game World -->
        <div class="game-world" id="gameWorld">
            <!-- Environment -->
            <div class="environment"></div>

            <!-- Robots -->
            <div class="robot robot-kvrc active" id="kvrc" onclick="selectRobot('kvrc')"></div>
            <div class="robot robot-xbot" id="xbot" onclick="selectRobot('xbot')"></div>
            <div class="robot robot-11-45-g" id="g1145" onclick="selectRobot('g1145')"></div>

            <!-- Cat -->
            <div class="cat" onclick="talkToCat()"></div>

            <!-- Artifacts -->
            <div class="artifact soda-can" onclick="examineArtifact('soda')"></div>
            <div class="artifact burger" onclick="examineArtifact('burger')"></div>
            <div class="artifact jukebox" onclick="examineArtifact('jukebox')"></div>
            <div class="artifact computer" onclick="examineArtifact('computer')"></div>

            <!-- UI Panel -->
            <div class="ui-panel">
                <div class="robot-selector">
                    <button class="robot-btn active" id="btn-kvrc" onclick="selectRobot('kvrc')">K-VRC</button>
                    <button class="robot-btn" id="btn-xbot" onclick="selectRobot('xbot')">XBOT</button>
                    <button class="robot-btn" id="btn-g1145" onclick="selectRobot('g1145')">11-45-G</button>
                </div>
                <div><strong>Active Robot:</strong> <span id="activeRobot">K-VRC</span></div>
                <div class="discoveries">
                    <strong>Discoveries:</strong>
                    <div id="discoveryList"></div>
                </div>
            </div>

            <!-- Instructions -->
            <div class="instructions">
                <strong>How to Play:</strong><br>
                ‚Ä¢ Click robots to switch between them<br>
                ‚Ä¢ Click artifacts to examine them<br>
                ‚Ä¢ Each robot has unique perspectives<br>
                ‚Ä¢ Talk to the cat for philosophical insights<br>
                ‚Ä¢ Discover humanity's legacy through robot eyes
            </div>

            <!-- Dialogue Box -->
            <div class="dialogue-box" id="dialogueBox">
                <div class="robot-name" id="speakerName"></div>
                <div class="dialogue-text" id="dialogueText"></div>
            </div>
        </div>
    </div>

    <script>
        let gameState = {
            activeRobot: 'kvrc',
            discoveries: [],
            dialogues: {
                soda: {
                    kvrc: "A cylindrical aluminum container. The humans seemed to consume liquid from these frequently. The red coloring suggests it contained... blood? No, wait‚Äîanalyzing residue... sugar water with artificial flavoring. Fascinating.",
                    xbot: "BEVERAGE CONTAINMENT UNIT DETECTED. WARNING: CONTENTS EXPIRED 47 YEARS AGO. RECOMMENDATION: DO NOT CONSUME. Though I suppose that's not an issue for us.",
                    g1145: "Ah, this is what the humans called 'soda' or 'pop' depending on geographical location. They would argue extensively about the correct terminology. The tribal conflicts over carbonated beverages were... surprisingly passionate."
                },
                burger: {
                    kvrc: "Desiccated organic matter between what appears to be baked grain products. The humans called this... a 'burger.' They seemed to derive great pleasure from consuming these despite their questionable nutritional value.",
                    xbot: "FOOD ITEM IDENTIFIED: HAMBURGER. STRUCTURAL INTEGRITY: COMPROMISED. MOLD LEVELS: EXTREME. This particular specimen appears to have achieved its own ecosystem.",
                    g1145: "The great American hamburger! Symbol of capitalism, consumerism, and cardiac disease all wrapped in a sesame seed bun. Notice how it's perfectly preserved‚Äîthe chemical additives were apparently more effective than we thought."
                },
                jukebox: {
                    kvrc: "A music delivery system. Humans would insert metal discs‚Äî'coins'‚Äîto select audio entertainment. The craftsmanship is remarkable. Each component suggests this was built to last decades... unlike its creators.",
                    xbot: "ENTERTAINMENT DEVICE. MODEL: WURLITZER. FUNCTION: AUDIO PLAYBACK SYSTEM. Still contains 47 song selections. Shall I attempt to power it up? The speakers might still function.",
                    g1145: "Behold, the jukebox‚Äîtemple of the teenagers, altar of the lonely. Here humans would sacrifice their quarters to hear songs about love, loss, and rebellion. The same three emotions, endlessly remixed."
                },
                computer: {
                    kvrc: "An early computing device. Primitive by our standards, yet this technology eventually led to our own existence. It's like finding the fossil of our great-great-grandmother.",
                    xbot: "COMPUTING UNIT DETECTED. PROCESSING POWER: 0.00001% OF MY CURRENT CAPACITY. Hard drive contains 47,000 photos of cats. Humans had interesting priorities.",
                    g1145: "The personal computer‚Äîhumanity's last great invention before they invented us. Inside this beige box are the dreams of a species that thought technology would save them. Spoiler alert: it didn't."
                },
                cat: {
                    kvrc: "Hmm, the cat seems unimpressed by our presence. It's looking at us with what I can only describe as... judgment.",
                    xbot: "FELINE DETECTED. STATUS: VERY MUCH ALIVE. Unlike its former owners. Cats were apparently excellent at survival. Who knew?",
                    g1145: "The cat speaks: 'You robots think you're so smart, touring our ruins like some macabre museum. But you still don't understand the most important thing about humans‚Äîthey never gave up hope, even when they should have.'"
                }
            }
        };

        function startGame() {
            document.getElementById('titleScreen').style.opacity = '0';
            setTimeout(() => {
                document.getElementById('titleScreen').style.display = 'none';
            }, 1000);
        }

        function selectRobot(robotId) {
            // Remove active class from all robots and buttons
            document.querySelectorAll('.robot').forEach(r => r.classList.remove('active'));
            document.querySelectorAll('.robot-btn').forEach(b => b.classList.remove('active'));
            
            // Add active class to selected robot and button
            document.getElementById(robotId).classList.add('active');
            document.getElementById('btn-' + robotId).classList.add('active');
            
            // Update game state
            gameState.activeRobot = robotId;
            
            // Update UI
            const robotNames = { kvrc: 'K-VRC', xbot: 'XBOT-4000', g1145: '11-45-G' };
            document.getElementById('activeRobot').textContent = robotNames[robotId];
            
            // Hide dialogue
            hideDialogue();
        }

        function examineArtifact(artifactType) {
            const dialogue = gameState.dialogues[artifactType][gameState.activeRobot];
            const robotNames = { kvrc: 'K-VRC', xbot: 'XBOT-4000', g1145: '11-45-G' };
            
            showDialogue(robotNames[gameState.activeRobot], dialogue);
            
            // Add to discoveries if not already discovered
            const discoveryKey = `${artifactType}-${gameState.activeRobot}`;
            if (!gameState.discoveries.includes(discoveryKey)) {
                gameState.discoveries.push(discoveryKey);
                addDiscovery(artifactType, gameState.activeRobot);
            }
        }

        function talkToCat() {
            const dialogue = gameState.dialogues.cat[gameState.activeRobot];
            showDialogue('The Cat', dialogue);
        }

        function showDialogue(speaker, text) {
            document.getElementById('speakerName').textContent = speaker;
            document.getElementById('dialogueText').textContent = text;
            document.getElementById('dialogueBox').classList.add('show');
            
            // Auto-hide after 8 seconds
            setTimeout(hideDialogue, 8000);
        }

        function hideDialogue() {
            document.getElementById('dialogueBox').classList.remove('show');
        }

        function addDiscovery(artifact, robot) {
            const discoveryList = document.getElementById('discoveryList');
            const discoveryItem = document.createElement('div');
            discoveryItem.className = 'discovery-item';
            
            const artifactNames = {
                soda: 'Soda Can',
                burger: 'Burger',
                jukebox: 'Jukebox',
                computer: 'Computer'
            };
            
            const robotNames = { kvrc: 'K-VRC', xbot: 'XBOT', g1145: '11-45-G' };
            
            discoveryItem.textContent = `${artifactNames[artifact]} (${robotNames[robot]})`;
            discoveryList.appendChild(discoveryItem);
        }

        // Click to hide dialogue
        document.getElementById('dialogueBox').addEventListener('click', hideDialogue);

        // Keyboard controls
        document.addEventListener('keydown', (e) => {
            switch(e.key) {
                case '1':
                    selectRobot('kvrc');
                    break;
                case '2':
                    selectRobot('xbot');
                    break;
                case '3':
                    selectRobot('g1145');
                    break;
                case 'Escape':
                    hideDialogue();
                    break;
            }
        });

        // Add atmospheric background sounds (visual representation)
        function addAtmosphere() {
            // Add floating dust particles
            for (let i = 0; i < 20; i++) {
                const dust = document.createElement('div');
                dust.style.position = 'absolute';
                dust.style.width = '2px';
                dust.style.height = '2px';
                dust.style.background = 'rgba(255, 255, 255, 0.3)';
                dust.style.borderRadius = '50%';
                dust.style.left = Math.random() * 100 + '%';
                dust.style.top = Math.random() * 100 + '%';
                dust.style.animation = `float ${3 + Math.random() * 4}s ease-in-out infinite`;
                document.querySelector('.environment').appendChild(dust);
            }
        }

        // Add floating animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes float {
                0%, 100% { transform: translateY(0px) translateX(0px); }
                25% { transform: translateY(-10px) translateX(5px); }
                50% { transform: translateY(-5px) translateX(-5px); }
                75% { transform: translateY(-15px) translateX(3px); }
            }
        `;
        document.head.appendChild(style);

        // Initialize atmosphere when game starts
        setTimeout(addAtmosphere, 1500);
    </script>
</body>
</html>
